# setup config_tests.h.in
file( TO_NATIVE_PATH ${BIN_DIR} BIN_DIR_NATIVE_PATH )
file( TO_NATIVE_PATH ${CONFIG_DIR} CONFIG_DIR_NATIVE_PATH )
file( TO_NATIVE_PATH "${OMNINAMES_LOGDIR}/" OMNINAMES_LOGDIR_NATIVE_PATH )
file( TO_NATIVE_PATH "${CONFIG_DIR}/omniORB4_testing.cfg" OMNIORB_CONFIG_NATIVE_PATH )
file( TO_NATIVE_PATH "${CONFIG_DIR}/omniORB4_testing2.cfg" OMNIORB_CONFIG_NATIVE_PATH2 )
file( TO_NATIVE_PATH "${CONFIG_DIR}/master_agent_testing.cfg" MASTER_AGENT_CONFIG_NATIVE_PATH )
file( TO_NATIVE_PATH "${CONFIG_DIR}/local_agent_testing.cfg" LOCAL_AGENT_CONFIG_NATIVE_PATH )
file( TO_NATIVE_PATH "${CONFIG_DIR}/MA_DAG_testing.cfg" MADAG_CONFIG_NATIVE_PATH )
file( TO_NATIVE_PATH "${CONFIG_DIR}/forwarder_testing.cfg" FWD_CONFIG_NATIVE_PATH )
file( TO_NATIVE_PATH "${PROJECT_BINARY_DIR}/src/agent" DIETAGENT_DIR_NATIVE_PATH )
file( TO_NATIVE_PATH "${PROJECT_BINARY_DIR}/src/agent/workflow" DIETMADAG_DIR_NATIVE_PATH )
file( TO_NATIVE_PATH "${PROJECT_BINARY_DIR}/src/CORBA" DIETFWD_DIR_NATIVE_PATH )

get_filename_component(OMNIORB4_OMNINAMES_PATH ${OMNIORB4_NAMESERVER} PATH)
get_filename_component(OMNIORB4_OMNINAMES_CMD ${OMNIORB4_NAMESERVER} NAME)
file( TO_NATIVE_PATH ${OMNIORB4_OMNINAMES_PATH} OMNIORB4_OMNINAMES_NATIVE_PATH )
get_filename_component(OMNIORB4_OMNINAMES_LIBPATH ${OMNIORB4_LIBRARY_omniORB4} PATH)
file( TO_NATIVE_PATH ${OMNIORB4_OMNINAMES_LIBPATH} OMNIORB4_LIBRARY_NATIVE_PATH )


set(LOGSERVICE_COMMAND "LogCentral")
find_program(LOGSERVICE_COMMAND_PATH ${LOGSERVICE_COMMAND} HINTS "${LOGSERVICE_DIR}/bin")
get_filename_component(LOGSERVICE_PATH ${LOGSERVICE_COMMAND_PATH} PATH)
set(DIETLOGTOOL_COMMAND "DIETtestTool")
find_program(DIETLOGTOOL_COMMAND_PATH ${DIETLOGTOOL_COMMAND} HINTS "${LOGSERVICE_DIR}/bin")
get_filename_component(DIETLOGTOOL_PATH ${DIETLOGTOOL_COMMAND_PATH} PATH)
file( TO_NATIVE_PATH "${CONFIG_DIR}/logservice_testing.cfg" LOGSERVICE_CONFIG_NATIVE_PATH )

file( TO_NATIVE_PATH "${PROJECT_BINARY_DIR}/src/examples/" EXAMPLES_DIR_NATIVE_PATH )

file( TO_NATIVE_PATH "${WF_XML_DIR}/" TEST_WORKFLOW_DIR_NATIVE_PATH )


# System dependent environment variables
SET(TESTENV_LIBRARY_PATH "${OMNIORB4_LIBRARY_NATIVE_PATH}:${PROJECT_BINARY_DIR}/src/client/:${PROJECT_BINARY_DIR}/src/SeD/:")
SET(TESTENV_LIBRARY_PATH "${TESTENV_LIBRARY_PATH}${PROJECT_BINARY_DIR}/src/utils/DAGDA:")

if (APPLE)
  SET(TESTENV_LIBRARY_PATH_NAME "DYLD_LIBRARY_PATH")
else (APPLE)
  SET(TESTENV_LIBRARY_PATH_NAME "LD_LIBRARY_PATH")
endif (APPLE) 

string(RANDOM LENGTH 36 FWDGENUUID)
set(FWD_CLIENT_NAME "clientFwd-${FWDGENUUID}")


configure_file( ${CMAKE_CURRENT_SOURCE_DIR}/config_tests.h.in 
  ${PROJECT_BINARY_DIR}/include/config_tests.h )

add_library( utils STATIC utils.cpp )


###############################################################################
# SeD c'est bien
###############################################################################
add_executable( SimpleAddSeD SimpleAddSeD.cpp )
if (WIN32)
  target_link_libraries( SimpleAddSeD
    ${DIET_SERVER_LIBRARIES} 
  )
else (WIN32)
  target_link_libraries( SimpleAddSeD
    ${DIET_SERVER_LIBRARIES} 
    ${Boost_LIBRARIES} 
    pthread )
endif (WIN32)	
  

