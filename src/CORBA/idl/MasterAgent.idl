/****************************************************************************/
/* DIET master agent IDL description                                        */
/*                                                                          */
/*  Author(s):                                                              */
/*    - Sylvain DAHAN (Sylvain.Dahan@lifc.univ-fcomte.fr)                   */
/*                                                                          */
/* $LICENSE$                                                                */
/****************************************************************************/
/* $Id$
 * $Log$
 * Revision 1.6  2006/04/14 14:13:10  aamar
 * Interface extension for workflow support.
 * Adding two methods : submit_wf (TO REMOVE) and submit_pb_set.
 *
 * Revision 1.5  2005/09/05 15:59:48  hdail
 * Addition of client hostname and location information to submit call
 * (experimental and protected by HAVE_ALTPREDICT).
 *
 * Revision 1.4  2004/10/06 16:39:14  rbolze
 * add function to get the profile available on its hierarchy
 *
 * Revision 1.3  2004/09/29 13:35:31  sdahan
 * Add the Multi-MAs feature.
 *
 * Revision 1.2  2004/02/27 10:19:50  bdelfabr
 * description of all methods for data persistency
 *
 * Revision 1.1  2003/04/10 12:31:10  pcombes
 * Replace masterAgent.idl. submit returns only a response.
 *
 ****************************************************************************/

#ifndef _MASTER_AGENT_IDL_
#define _MASTER_AGENT_IDL_

#include "Agent.idl"


interface MasterAgent : Agent {
  
  /** Submission function: called by the clients to submit a problem. */
#if ! HAVE_ALTPREDICT
  corba_response_t submit(in corba_pb_desc_t pb_profile,
			  in unsigned long maxServers);
#else // HAVE_ALTPREDICT
  corba_response_t submit(in corba_pb_desc_t pb_profile,
			  in unsigned long maxServers,
                          in string clientHostname,
                          in string clientLocID);
#endif
  
  /** get number of the current session */
  long get_session_num();

  /** get id of the data :  aggregation of numsession and numdata */
  string get_data_id();

  /** look up of data identified by id */ 
  unsigned long dataLookUp(in string id);

  /** get data descriptor */
  corba_data_desc_t get_data_arg(in string argID);

  /**
   * invoked by client : removal from the platform of the data identified by argID
   */
  long diet_free_pdata(in string argID);

  /**
   * get the list of Profile available.
   */

  SeqCorbaProfileDesc_t getProfiles(out long length);

#ifdef HAVE_MULTI_MA
  
  /** MAs federation management */
  boolean handShake(in MasterAgent me, in string myName);

  /** returns the address of the MA's bind service */
  string getBindName();

  /**
   * send a new request to the MA.
   */
  oneway void searchService(in MasterAgent me,
			    in string myName,
			    in corba_request_t request) ;

  /** ask to the MA to stop the flooding */
  oneway void stopFlooding(in long reqId, in string senderId) ;

  /** response which saids that the service is not found and a new step
      of flooding can be achive */
  oneway void serviceNotFound(in long reqId, in string senderId) ;

  /** launchs a new step of flooding */
  oneway void newFlood(in long reqId, in string senderId) ;

  /** response which saids that no new server can be found via this MA. */
  oneway void floodedArea(in long reqId, in string senderId) ;

  /** response which saids that the MA was already contacted for this
      request. */
  oneway void alreadyContacted(in long reqId,
			       in string senderId) ;

  /** response which saids that some servers was found. */
  oneway void serviceFound(in long reqId, in corba_response_t decision) ;

#endif // HAVE_MULTI_MA

#ifdef HAVE_WORKFLOW
  /** 
   * Workflow submission function. *
   * TO REMOVE *
   */
  wf_response_t submit_wf (in corba_wf_desc_t wf_desc);

  /** 
   * Another submission function *
   * called by the MA_DAG or a client to submit a set of problems *
   */
  wf_response_t submit_pb_set (in corba_pb_desc_seq_t seq_pb);
#endif // HAVE_WORKFLOW
};

#endif // _MASTER_AGENT_IDL_
