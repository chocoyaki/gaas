/****************************************************************************/
/* DIET Data Manager IDL description                                        */
/*                                                                          */
/*  Author(s):                                                              */
/*    - Bruno DEL FABBRO (Bruno.DelFabbro@lifc.univ-fcomte.fr)              */
/*                                                                          */
/* $LICENSE$                                                                */
/****************************************************************************/
/* $Id$
 * $Log$
 * Revision 1.6  2005/09/05 15:57:41  hdail
 * Addition of method call getDataLoc to obtain just information about data w/o
 * the dataset  (experimental and protected by HAVE_ALTPREDICT).
 *
 * Revision 1.5  2004/02/27 10:19:50  bdelfabr
 * description of all methods for data persistency
 *
 * Revision 1.4  2003/11/10 14:00:15  bdelfabr
 * methods to get SeD hostname(for later estimation time )
 *
 * Revision 1.3  2003/10/14 20:26:27  bdelfabr
 * adding methods for printing List of sons name
 *
 * Revision 1.2  2003/09/24 09:08:42  pcombes
 * DataMgr does not need a name: use its reference.
 *
 * Revision 1.1  2003/09/22 21:07:01  pcombes
 * Set all the modules and their interfaces for data persistency.
 *
 ***************************************************************************/

#ifndef _DATAMGR_IDL_
#define _DATAMGR_IDL_

#include "common_types.idl"

#if HAVE_ALTPREDICT
#include "response.idl"
#endif // HAVE_ALTPREDICT

/****************************************************************************/
/* Data Manager Interface                                                   */
/****************************************************************************/

interface DataMgr {
  
  /**
   * Method invoked by the Data Manager to get a data identified by id.
   */
  void putData(in string argID, in DataMgr me);

  /**
   * Remove data identified by cdataId after a data transfer.
   * Invoked by the loc Manager Father
   */
  long rmDataRef(in string argID);
 
  /**
   * Invoked by a Loc Manager because this Data Manager is holding an IN or
   * INOUT argument identified by argID. Returns this Data Manager reference or
   * DataMgr::_nil() if the data were not present.
   */
  DataMgr whereData(in string argID);

  /** Sending data to remote Data Manager. */
  void sendData(inout corba_data_t arg);

  /**
   * Prints the List of data stored on the DataManager.
   */
  void printList();
  
  string setMyName();

  /**
   * returns the name of the SeD in which a data identified by argID is located,
   * returns NULL elsewhere.
   */
  string
  whichSeDOwner(in string argID);

#if HAVE_ALTPREDICT
  corba_data_loc_t
  getDataLoc(in string argID);
#endif // HAVE_ALTPREDICT

};


#endif // _DATAMGR_IDL_
