/****************************************************************************/
/* DIET forwarder IDL description                                           */
/*                                                                          */
/*  Author(s):                                                              */
/*    - Gael Le Mahec   (gael.le.mahec@ens-lyon.fr)                         */
/*                                                                          */
/* $LICENSE$                                                                */
/****************************************************************************/
/* $Id$ */
/* $Log$
/* Revision 1.1  2010/07/12 15:54:11  glemahec
/* DIET 2.5 beta 1 - Forwarder IDL files
/* */


#ifndef MADAGFWDR_IDL
#define MADAGFWDR_IDL

#include "MaDag.idl"

interface MaDagFwdr : MaDag {

};

interface MaDagForwarder {
  long processDagWf(in corba_wf_desc_t dag_desc,
										in string cltMgrRef,
										in long wfReqId,
										in string objName)
      raises(MaDag::InvalidDag, MaDag::ServiceNotFound,
						 MaDag::CommProblem);

  long processMultiDagWf(in corba_wf_desc_t dag_desc,
												 in string cltMgrRef,
                         in long wfReqId,
                         in boolean release,
												 in string objName)
      raises(MaDag::InvalidDag, MaDag::ServiceNotFound,
						 MaDag::CommProblem);

  long getWfReqId(in string objName);

  void releaseMultiDag(in long wfReqId, in string objName)
      raises(MaDag::InvalidRequest);

  void cancelDag(in long dagId, in string objName)
      raises(MaDag::InvalidDag);

  void setPlatformType(in MaDag::pfmType_t pfmType, in string objName);
};

#endif
