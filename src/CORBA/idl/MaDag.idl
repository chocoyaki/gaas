/****************************************************************************/
/* MA DAG IDL description                                                   */
/*                                                                          */
/*  Author(s):                                                              */
/*    - Abdelkader Amar (Abdelkader.Amar@ens-lyon.fr)                       */
/*    - Benjamin Isnard (Benjamin.Isnard@ens-lyon.fr)                       */
/*                                                                          */
/* $LICENSE$                                                                */
/****************************************************************************/
/* $Id$
 * $Log$
 * Revision 1.15  2009/09/25 12:42:37  bisnard
 * added dag cancellation method
 *
 * Revision 1.14  2009/02/06 14:51:55  bisnard
 * setup exceptions for workflows
 *
 * Revision 1.13  2008/12/09 12:09:03  bisnard
 * added parameters to dag submit method to handle inter-dependent dags
 *
 * Revision 1.12  2008/12/02 10:18:20  bisnard
 * modified dag submission method for multi-dags
 *
 * Revision 1.11  2008/09/04 15:02:08  bisnard
 * new method setPlatformType
 *
 * Revision 1.10  2008/05/16 12:29:38  bisnard
 * MaDag returns dagID to client after dag submission
 * (used for node execution)
 *
 * Revision 1.9  2008/04/21 14:32:46  bisnard
 * use wf request identifer instead of dagid to reference client
 *
 * Revision 1.8  2008/04/14 13:45:11  bisnard
 * - Removed wf mono-mode submit
 * - Renamed submit_wf in processDagWf
 *
 * Revision 1.7  2008/04/14 09:14:30  bisnard
 *  - Workflow rescheduling (CltReoMan) no longer used with MaDag v2
 *  - AbstractWfSched and derived classes no longer used with MaDag v2
 *
 * Revision 1.6  2008/04/10 08:17:14  bisnard
 * New version of the MaDag where workflow node execution is triggered by the MaDag agent and done by a new CORBA object CltWfMgr located in the client
 *
 * Revision 1.5  2008/03/21 10:22:04  rbolze
 *  - add ping() function to the MaDag in order to be able test this component.
 * this is use by goDIET.
 *  - print IOR in stdout in the constructor of the MaDag.
 *
 * Revision 1.4  2006/11/06 15:45:22  aamar
 * Changing the submit_wf prototype (to manage the reqID in the MA side).
 *
 * Revision 1.3  2006/10/20 08:14:13  aamar
 * Changing the submit_wf prototype (the return type)
 * Add the following function to the MA DAG interface
 *   - void setAsDone, setDagAsDone, registerClt
 *
 * Revision 1.2  2006/07/10 08:57:30  aamar
 * Adding the function "remainingDag" to the MA DAG interface
 *
 * Revision 1.1  2006/04/14 13:41:48  aamar
 * MA DAG IDL interface.
 *
 ****************************************************************************/

#ifndef _MADAG_IDL_
#define _MADAG_IDL_

#include "common_types.idl"

/****************************************************************************/
/* MA DAG interface                                                          */
/****************************************************************************/

interface MaDag {

  exception ServiceNotFound {
    string nodeId;
    string pbName;
    string pbParams;
  };

  exception InvalidDag {
    string info;
  };

  exception InvalidRequest {
    string info;
  };

  exception CommProblem {
    string info;
  };

 /**
  * DAG processing
  *
  * @param  dag_desc   dag textual description
  * @param  cltMgrRef  client workflow manager reference
  * @param  wfReqId    submitted request identifier
  * @return dag Id
  */
  long
      processDagWf(in corba_wf_desc_t dag_desc,
                   in string cltMgrRef,
                   in long wfReqId)
      raises(InvalidDag, ServiceNotFound, CommProblem);

  /**
   * Multi DAG processing
   * (when submitted DAG is linked to other DAGs)
   *
   * @param  dag_desc     dag textual description
   * @param  cltMgrRef    client workflow manager reference
   * @param  wfReqId      submitted request identifier
   * @param  release      if false, keep the wf request open after this req
   * @return dag Id
   */

  long
      processMultiDagWf(in corba_wf_desc_t dag_desc,
                        in string cltMgrRef,
                        in long wfReqId,
                        in boolean release)
      raises(InvalidDag, ServiceNotFound, CommProblem);

  /**
   * Get a new workflow request identifier
   */
  long getWfReqId();


  /** Used to test if this process is alive. */
  long ping();

  /**
   * Release a multi-dag
   */
  void
      releaseMultiDag(in long wfReqId)
      raises(InvalidRequest);

  /**
   * Cancel the execution of a dag
   * (execution of running tasks is not stopped)
   */
  void
      cancelDag(in long dagId)
      raises(InvalidDag);

  /**
   * Select type of platform connected to MaDag
   */
  enum pfmType_t { DISTINCT_SERVICES, SAME_SERVICES };
  void setPlatformType(in pfmType_t pfmType);

};

#endif // _MADAG_IDL_
