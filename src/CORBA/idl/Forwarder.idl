/****************************************************************************/
/* DIET forwarder IDL description                                           */
/*                                                                          */
/*  Author(s):                                                              */
/*    - Gael Le Mahec   (gael.le.mahec@ens-lyon.fr)                         */
/*                                                                          */
/* $LICENSE$                                                                */
/****************************************************************************/
/* $Id$
 * $Log$
 * Revision 1.6  2010/12/17 09:47:59  kcoulomb
 * * Set diet to use the new log with forwarders
 * * Fix a CoRI problem
 * * Add library version remove DTM flag from ccmake because deprecated
 *
 * Revision 1.5  2010/07/27 16:16:49  glemahec
 * Forwarders robustness
 *
 * Revision 1.4  2010/07/27 10:24:32  glemahec
 * Improve robustness & general performance
 *
 * Revision 1.3  2010/07/20 14:31:46  glemahec
 * Forwarder robustness + bug corrections
 *
 * Revision 1.2  2010/07/14 23:45:31  bdepardo
 * Header corrections
 *
 * Revision 1.1  2010/07/12 15:54:35  glemahec
 * DIET 2.5 beta 1 - Forwarder IDL files
 ****************************************************************************/

#ifndef FORWARDER_IDL
#define FORWARDER_IDL

#include "common_types.idl"
#include "response.idl"

#include "AgentFwdr.idl"
#include "CallbackFwdr.idl"
#include "LocalAgentFwdr.idl"
//#include "LogComponentFwdr.idl"
#include "MasterAgentFwdr.idl"
#include "SeDFwdr.idl"

#if HAVE_DAGDA
#include "DagdaFwdr.idl"
#else
#include "DataMgrFwdr.idl"
#include "LocMgrFwdr.idl"
#endif

#if HAVE_WORKFLOW
#include "CltManFwdr.idl"
#include "MaDagFwdr.idl"
#include "WfLogServiceFwdr.idl"
#endif

interface Forwarder :
  MasterAgentForwarder
	, CallbackForwarder
	, SeDForwarder
  //	, ComponentConfiguratorForwader
#if HAVE_WORKFLOW
  , CltManForwarder
	, MaDagForwarder
	, WfLogServiceForwarder
#endif
#if HAVE_DAGDA
	, DagdaForwarder
#else
  , DataMgrForwarder
	, LocMgrForwarder
#endif
{	
	/* Get objects from the Forwarder. */
	Agent getAgent(in string name);
	Callback getCallback(in string name);
	LocalAgent getLocalAgent(in string name);
	//ComponentConfigurator getComponentConfigurator(in string name);
	//LogCentralComponent getLogCentralComponent(in string name);
  MasterAgent getMasterAgent(in string name);
	SeD getSeD(in string name);
	
#if HAVE_DAGDA
	Dagda getDagda(in string name);
#else
	DataMgr getDataMgr(in string name);
	LocMgr getLocMgr(in string name);
#endif

#if HAVE_WORKFLOW
  CltMan getCltMan(in string name);
	MaDag getMaDag(in string name);
  WfLogService getWfLogService(in string name);
#endif
	/* Common methods. */
	long ping(in string objName)
		raises(UnknownObject, BadNameException);
  oneway void getRequest(in corba_request_t req, in string objName);
  string getHostname(in string objName)
		raises(UnknownObject, BadNameException);
#if HAVE_DYNAMICS
  long bindParent(in string parentName, in string objName)
		raises(UnknownObject, BadNameException);
  long disconnect(in string objName)
		raises(UnknownObject, BadNameException);
  long removeElement(in boolean recursive, in string objName)
		raises(UnknownObject, BadNameException);
#endif
#ifndef HAVE_DAGDA
  string whereData(in string argID, in string objName)
		raises(UnknownObject, BadNameException);
  string setMyName(in string objName)
		raises(UnknownObject, BadNameException);
  string whichSeDOwner(in string argID, in string objName)
		raises(UnknownObject, BadNameException);
  void printList(in string objName)
		raises(UnknownObject, BadNameException);

#endif
	/* CORBA remote management. */
	void bind(in string objName, in string ior);
	oneway void unbind(in string objName);
	SeqString getBindings(in string ctxt);
	
	/* Peer connection. */
	void connectPeer(in string ior, in string host, in long port);
	string getIOR();
	
	/* Obtain informations about this forwarder. */
	string getName();
	SeqString acceptList();
	SeqString rejectList();
	boolean manage(in string hostname);
	
	SeqString routeTree();
	
	/* Forwarders management. */
	/* traceRoute, ping, topology, ... */
};

#endif
