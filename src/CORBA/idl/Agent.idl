/****************************************************************************/
/* DIET agent IDL description                                               */
/*                                                                          */
/*  Author(s):                                                              */
/*    - Philippe COMBES (Philippe.Combes@ens-lyon.fr)                       */
/*    - Sylvain DAHAN (Sylvain.Dahan@lifc.univ-fcomte.fr)                   */
/*    - Frederic LOMBARD (Frederic.Lombard@lifc.univ-fcomte.fr)             */
/*                                                                          */
/* $LICENSE$                                                                */
/****************************************************************************/
/* $Id$
 * $Log$
 * Revision 1.5  2005/05/15 15:34:08  alsu
 * to indicate success/failure, addServices now returns a value
 *
 * Revision 1.4  2004/09/29 13:35:31  sdahan
 * Add the Multi-MAs feature.
 *
 * Revision 1.3  2004/06/11 15:45:39  ctedesch
 * add DIET/JXTA
 *
 * Revision 1.2  2003/09/22 21:21:45  pcombes
 * Set all the modules and their interfaces for data persistency.
 *
 * Revision 1.1  2003/04/10 12:30:49  pcombes
 * Replace agent.idl. Get rid of response definitions and of type decision.
 ****************************************************************************/


#ifndef _AGENT_IDL_
#define _AGENT_IDL_

#include "common_types.idl"
#include "response.idl"
#include "SeD.idl"



/****************************************************************************/
/* Agent interface                                                          */
/****************************************************************************/

interface Agent {

  /**
   * Invoked by other agents to register as a child of this agent. As it is
   * useless to register without offering services, the last argument is the
   * same as for addServices method. Returns a registration number wich
   * indentifies the child amongst the other children of this agent.
   */
  long agentSubscribe(in Agent me, in string hostname,
			       in SeqCorbaProfileDesc_t services);
  /**
   * Invoked by servers to register as a child of this agent. As it is useless
   * to register without offering services, the last argument is the same as for
   * addServices method. Returns a registration number wich indentifies the
   * child amongst the other children of this agent.
   */
  long serverSubscribe(in SeD me,  in string hostname,
#if HAVE_JXTA
				in string uuid,
#endif // HAVE_JXTA
				in SeqCorbaProfileDesc_t services);


  /**
   * Service table update method. Propagate the update of the problem list up
   * the tree when a new child registers. The first parameter is the child's
   * registration number.
   */
  long addServices(in unsigned long myID,
                   in SeqCorbaProfileDesc_t services);


  /**
   * Message posting functions:
   * This call is asynchronous. The response message REQ is kept in an
   * internal list and processed as soon as possible.
   */
  oneway void getResponse(in corba_response_t resp);


  /** Used to test if this agent is alive. */
  long ping();

  /** Used to get the host name of the Agent */
  string getHostname() ;

};


#endif // _AGENT_IDL_

