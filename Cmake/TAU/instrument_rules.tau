BEGIN_EXCLUDE_LIST

### "#lock#"


### We exclude the methods that we instrument 'by hand' (see INSTRUMENT section below) ###
## "#AgentImpl::agentSubscribe(#"
## "#AgentImpl::serverSubscribe(#"
## "#AgentImpl::addServices(#"
## "#AgentImpl::getResponse(#"
## "#AgentImpl::ping(#"
## "#AgentImpl::getHostname(#"
## "#CallbackImpl::ping(#"
## "#CallbackImpl::notifyResults(#"
## "#CallbackImpl::solveResults(#"
## "#CltWfMgr::execNodeOnSed(#"
## "#CltWfMgr::execNode(#"
## "#CltWfMgr::release(#"
## "#CltWfMgr::ping(#"
## "#SimpleDagdaImpl::lclIsDataPresent(#"
## "#SimpleDagdaImpl::lvlIsDataPresent(#"
## "#SimpleDagdaImpl::pfmIsDataPresent(#"
## "#SimpleDagdaImpl::lclAddData(#"
## "#SimpleDagdaImpl::lvlAddData(#"
## "#SimpleDagdaImpl::pfmAddData(#"
## "#SimpleDagdaImpl::registerFile(#"
## "#SimpleDagdaImpl::lclRemData(#"
## "#SimpleDagdaImpl::lvlRemData(#"
## "#SimpleDagdaImpl::pfmRemData(#"
## "#SimpleDagdaImpl::lclUpdateData(#"
## "#SimpleDagdaImpl::lvlUpdateData(#"
## "#SimpleDagdaImpl::pfmUpdateData(#"
## "#SimpleDagdaImpl::lclGetDataDescList(#"
## "#SimpleDagdaImpl::lvlGetDataDescList(#"
## "#SimpleDagdaImpl::pfmGetDataDescList(#"
## "#SimpleDagdaImpl::lclGetDataDesc(#"
## "#SimpleDagdaImpl::lvlGetDataDesc(#"
## "#SimpleDagdaImpl::pfmGetDataDesc(#"
## "#DagdaImpl::writeFile(#"
## "#DagdaImpl::sendFile(#"
## "#DagdaImpl::recordData(#"
## "#DagdaImpl::sendData(#"
## "#SimpleDagdaImpl::lvlGetDataManagers(#"
## "#SimpleDagdaImpl::pfmGetDataManagers(#"
## "#SimpleDagdaImpl::subscribe(#"
## "#SimpleDagdaImpl::unsubscribe(#"
## "#DagdaImpl::getHostname(#"
## "#DagdaImpl::lockData(#"
## "#DagdaImpl::unlockData(#"
## "#DagdaImpl::getDataStatus(#"
## "#SimpleDagdaImpl::getBestSource(#"
## "#DataMgrImpl::putData(#"
## "#DataMgrImpl::rmDataRef(#"
## "#DataMgrImpl::whereData(#"
## "#DataMgrImpl::sendData(#"
## "#DataMgrImpl::printList(#"
## "#DataMgrImpl::setMyName(#"
## "#DataMgrImpl::whichSeDOwner(#"
## "#LocMgrImpl::locMgrSubscribe(#"
## "#LocMgrImpl::dataMgrSubscribe(#"
## "#LocMgrImpl::addDataRef(#"
## "#LocMgrImpl::rmDataRef(#"
## "#LocMgrImpl::updateDataRef(#"
## "#LocMgrImpl::whereData(#"
## "#LocMgrImpl::whereDataSubtree(#"
## "#LocMgrImpl::updateDataProp(#"
## "#LocMgrImpl::rm_pdata(#"
## "#LocMgrImpl::setMyName(#"
## "#LocMgrImpl::printList(#"
## "#LocMgrImpl::whichSeDOwner(#"
"#LocalAgentImpl::getRequest(#"
## "#DietLogComponent::setTagFilter(#"
## "#DietLogComponent::addTagFilter(#"
## "#DietLogComponent::removeTagFilter(#"
## "#MaDag_impl::processDagWf(#"
## "#MaDag_impl::processMultiDagWf(#"
## "#MaDag_impl::getWfReqId(#"
"#MasterAgentImpl::submit(#"
## "#MasterAgentImpl::get_session_num(#"
## "#MasterAgentImpl::get_data_id(#"
## "#MasterAgentImpl::dataLookUp(#"
## "#MasterAgentImpl::get_data_arg(#"
## "#MasterAgentImpl::diet_free_pdata(#"
## "#MasterAgentImpl::getProfiles(#"
## "#MasterAgentImpl::handShake(#"
## "#MasterAgentImpl::getBindName(#"
## "#MasterAgentImpl::searchService(#"
## "#MasterAgentImpl::stopFlooding(#"
## "#MasterAgentImpl::serviceNotFound(#"
## "#MasterAgentImpl::newFlood(#"
## "#MasterAgentImpl::floodedArea(#"
## "#MasterAgentImpl::alreadyContacted(#"
## "#MasterAgentImpl::serviceFound(#"
## "#MasterAgentImpl::submit_pb_set(#"
## "#MasterAgentImpl::submit_pb_seq(#"
"#SeDImpl::getRequest(#"
## "#SeDImpl::checkContract(#"
## "#SeDImpl::updateTimeSinceLastSolve(#"
"#SeDImpl::solve(#"
"#SeDImpl::solveAsync(#"
END_EXCLUDE_LIST


BEGIN_FILE_EXCLUDE_LIST

# we do not instrument the files created by omniidl
*SK.*

END_FILE_EXCLUDE_LIST


BEGIN_INSTRUMENT_SECTION
###########
## Agent ##
###########
## entry routine="#AgentImpl::agentSubscribe(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long AgentImpl::agentSubscribe(Agent_ptr me, const char* hostName, const SeqCorbaProfileDesc_t& services) [{AgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#AgentImpl::serverSubscribe(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long AgentImpl::serverSubscribe(...) [{AgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#AgentImpl::addServices(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long AgentImpl::addServices(CORBA::ULong myID, const SeqCorbaProfileDesc_t& services) [{AgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#AgentImpl::getResponse(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void AgentImpl::getResponse(const corba_response_t& resp) [{AgentImpl.cc}]\", \" \", TAU_USER);"
## ## entry routine="#AgentImpl::ping(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long AgentImpl::ping() [{AgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#AgentImpl::getHostname(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char* AgentImpl::getHostname() [{AgentImpl.cc}]\", \" \", TAU_USER);"


##############
## Callback ##
##############
## entry routine="#CallbackImpl::ping(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long CallbackImpl::ping() [{CallbackImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#CallbackImpl::notifyResults(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long CallbackImpl::notifyResults(const char * path, const corba_profile_t& pb, CORBA::Long reqID) [{CallbackImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#CallbackImpl::solveResults(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long CallbackImpl::solveResults(const char * path, const corba_profile_t& pb, CORBA::Long reqID, CORBA::Long solve_res) [{CallbackImpl.cc}]\", \" \", TAU_USER);"


##############
## CltWfMgr ##
##############
## entry routine="#CltWfMgr::execNodeOnSed(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void CltWfMgr::execNodeOnSed(const char * node_id, const char * dag_id, _objref_SeD* sed) [{CltWfMgr.cc}]\", \" \", TAU_USER);"
## entry routine="#CltWfMgr::execNode(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void CltWfMgr::execNode(const char * node_id, const char * dag_id) [{CltWfMgr.cc}]\", \" \", TAU_USER);" 
## entry routine="#CltWfMgr::release(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void CltWfMgr::release(const char * dag_id) [{CltWfMgr.cc}]\", \" \", TAU_USER);"
## ## entry routine="#CltWfMgr::ping(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void CltWfMgr::ping() [{CltWfMgr.cc}]\", \" \", TAU_USER);"


###########
## Dagda ##
###########
## entry routine="#SimpleDagdaImpl::lclIsDataPresent(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Boolean SimpleDagdaImpl::lclIsDataPresent(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lvlIsDataPresent(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Boolean SimpleDagdaImpl::lvlIsDataPresent(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::pfmIsDataPresent(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Boolean SimpleDagdaImpl::pfmIsDataPresent(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lclAddData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::lclAddData(Dagda_ptr src, const corba_data_t& data) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lvlAddData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::lvlAddData(Dagda_ptr src, const corba_data_t& data) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::pfmAddData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::pfmAddData(Dagda_ptr src, const corba_data_t& data) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::registerFile(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::registerFile(const corba_data_t& data)  [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lclRemData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::lclRemData(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lvlRemData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::lvlRemData(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::pfmRemData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::pfmRemData(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lclUpdateData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::lclUpdateData(Dagda_ptr src, const corba_data_t& data) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lvlUpdateData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::lvlUpdateData(Dagda_ptr src, const corba_data_t& data) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::pfmUpdateData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\" [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lclGetDataDescList(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"SeqCorbaDataDesc_t* SimpleDagdaImpl::lclGetDataDescList() [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lvlGetDataDescList(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"SeqCorbaDataDesc_t* SimpleDagdaImpl::lvlGetDataDescList() [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::pfmGetDataDescList(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"SeqCorbaDataDesc_t* SimpleDagdaImpl::pfmGetDataDescList() [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lclGetDataDesc(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"corba_data_desc_t* SimpleDagdaImpl::lclGetDataDesc(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lvlGetDataDesc(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"corba_data_desc_t* SimpleDagdaImpl::lvlGetDataDesc(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::pfmGetDataDesc(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"corba_data_desc_t* SimpleDagdaImpl::pfmGetDataDesc(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DagdaImpl::writeFile(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char* DagdaImpl::writeFile(const SeqChar& data, const char* basename, CORBA::Boolean replace) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DagdaImpl::sendFile(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char* DagdaImpl::sendFile(const corba_data_t &data, Dagda_ptr dest) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DagdaImpl::recordData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char* DagdaImpl::recordData(const SeqChar& data, const corba_data_desc_t& dataDesc, CORBA::Boolean replace) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DagdaImpl::sendData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char* DagdaImpl::sendData(const char* dataId, Dagda_ptr dest) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::lvlGetDataManagers(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"SeqDagda_t* SimpleDagdaImpl::lvlGetDataManagers(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::pfmGetDataManagers(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"SeqDagda_t* SimpleDagdaImpl::pfmGetDataManagers(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::subscribe(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::subscribe(Dagda_ptr me) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::unsubscribe(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SimpleDagdaImpl::unsubscribe(Dagda_ptr me) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DagdaImpl::getHostname(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char* DagdaImpl::getHostname() [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DagdaImpl::lockData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void DagdaImpl::lockData(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DagdaImpl::unlockData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void DagdaImpl::unlockData(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DagdaImpl::getDataStatus(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"Dagda::dataStatus DagdaImpl::getDataStatus(const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SimpleDagdaImpl::getBestSource(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"Dagda_ptr SimpleDagdaImpl::getBestSource(Dagda_ptr dest, const char* dataID) [{DagdaImpl.cc}]\", \" \", TAU_USER);"


#################
## DataMgrImpl ##
#################
## entry routine="#DataMgrImpl::putData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void DataMgrImpl::putData(const char* argID, const DataMgr_ptr me) [{DataMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DataMgrImpl::rmDataRef(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long DataMgrImpl::rmDataRef(const char* argID) [{DataMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DataMgrImpl::whereData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"DataMgr_ptr DataMgrImpl::whereData(const char* argID) [{DataMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DataMgrImpl::sendData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void DataMgrImpl::sendData(corba_data_t& arg) [{DataMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DataMgrImpl::printList(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void DataMgrImpl::printList() [{DataMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DataMgrImpl::setMyName(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"DataMgrImpl::setMyName() [{DataMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#DataMgrImpl::whichSeDOwner(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char * DataMgrImpl::whichSeDOwner(const char* argId) [{DataMgrImpl.cc}]\", \" \", TAU_USER);"



################
## LocMgrImpl ##
################
## entry routine="#LocMgrImpl::locMgrSubscribe(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::ULong LocMgrImpl::locMgrSubscribe(LocMgr_ptr me, const char* hostName) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::dataMgrSubscribe(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::ULong LocMgrImpl::dataMgrSubscribe(DataMgr_ptr me, const char* hostName) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::addDataRef(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void LocMgrImpl::addDataRef(const corba_data_desc_t& arg, CORBA::ULong cChildID) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::rmDataRef(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void LocMgrImpl::rmDataRef(const char *argID, CORBA::ULong cChildID) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::updateDataRef(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void LocMgrImpl::updateDataRef(const corba_data_desc_t& arg, CORBA::ULong cChildID, CORBA::Long upDown) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::whereData(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"DataMgr_ptr LocMgrImpl::whereData(const char* argID) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::whereDataSubtree(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"DataMgr_ptr LocMgrImpl::whereDataSubtree(const char* argID) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::updateDataProp(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void LocMgrImpl::updateDataProp(const char *argID) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::rm_pdata(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long LocMgrImpl::rm_pdata(const char* argID) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::setMyName(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char * LocMgrImpl::setMyName() [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::printList(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void LocMgrImpl::printList() [{LocMgrImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#LocMgrImpl::whichSeDOwner(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char * LocMgrImpl::whichSeDOwner(const char* argID) [{LocMgrImpl.cc}]\", \" \", TAU_USER);"


####################
## LocalAgentImpl ##
####################
entry routine="#LocalAgentImpl::getRequest(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void LocalAgentImpl::getRequest(const corba_request_t& req) [{LocalAgentImpl.cc}]\", \" \", TAU_USER);"


######################
## DietLogComponent ##
######################
## entry routine="#DietLogComponent::setTagFilter(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void DietLogComponent::setTagFilter(const tag_list_t& tagList) [{DietLogComponent.cc}]\", \" \", TAU_USER);"
## entry routine="#DietLogComponent::addTagFilter(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void DietLogComponent::addTagFilter(const tag_list_t& tagList) [{DietLogComponent.cc}]\", \" \", TAU_USER);"
## entry routine="#DietLogComponent::removeTagFilter(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void DietLogComponent::removeTagFilter(const tag_list_t& tagList) [{DietLogComponent.cc}]\", \" \", TAU_USER);"


###########
## MaDag ##
###########
## entry routine="#MaDag_impl::processDagWf(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Boolean MaDag_impl::processDagWf(const corba_wf_desc_t& dag_desc, const char* cltMgrRef, CORBA::Long wfReqId) [{MaDag_impl.cc}]\", \" \", TAU_USER);"
## entry routine="#MaDag_impl::processMultiDagWf(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Boolean MaDag_impl::processMultiDagWf(const corba_wf_desc_t& dag_desc, const char* cltMgrRef, CORBA::Long wfReqId) [{MaDag_impl.cc}]\", \" \", TAU_USER);"
## entry routine="#MaDag_impl::getWfReqId(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long MaDag_impl::getWfReqId() [{MaDag_impl.cc}]\", \" \", TAU_USER);"


#################
## MasterAgent ##
#################
entry routine="#MasterAgentImpl::submit(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"corba_response_t* MasterAgentImpl::submit(...) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::get_session_num(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long MasterAgentImpl::get_session_num() [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::get_data_id(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char * MasterAgentImpl::get_data_id() [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::dataLookUp(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::ULong MasterAgentImpl::dataLookUp(const char* argID) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::get_data_arg(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"corba_data_desc_t* MasterAgentImpl::get_data_arg(const char* argID) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::diet_free_pdata(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long MasterAgentImpl::diet_free_pdata(const char* argID) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::getProfiles(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"SeqCorbaProfileDesc_t*  MasterAgentImpl::getProfiles(CORBA::Long& length) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::handShake(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Boolean MasterAgentImpl::handShake(MasterAgent_ptr me, const char* myName) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::getBindName(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"char* MasterAgentImpl::getBindName() [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::searchService(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void MasterAgentImpl::searchService(MasterAgent_ptr predecessor, const char* predecessorId, const corba_request_t& request) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::stopFlooding(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void MasterAgentImpl::stopFlooding(CORBA::Long reqId, const char* senderId) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::serviceNotFound(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void MasterAgentImpl::serviceNotFound(CORBA::Long reqId, const char* senderId) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::newFlood(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void MasterAgentImpl::newFlood(CORBA::Long reqId, const char* senderId) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::floodedArea(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void MasterAgentImpl::floodedArea(CORBA::Long reqId, const char* senderId) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::alreadyContacted(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void MasterAgentImpl::alreadyContacted(CORBA::Long reqId, const char* senderId) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::serviceFound(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void MasterAgentImpl::serviceFound(CORBA::Long reqId, const corba_response_t& decision) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::submit_pb_set(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"wf_response_t * MasterAgentImpl::submit_pb_set  (const corba_pb_desc_seq_t& seq_pb, const CORBA::Long setSize) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#MasterAgentImpl::submit_pb_seq(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"response_seq_t* MasterAgentImpl::submit_pb_seq(const corba_pb_desc_seq_t& pb_seq, CORBA::Long reqCount, CORBA::Boolean& complete, CORBA::Long& firstReqId, CORBA::Long& seqReqId) [{MasterAgentImpl.cc}]\", \" \", TAU_USER);"


#############
## SeDImpl ##
#############
entry routine="#SeDImpl::getRequest(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SeDImpl::getRequest(const corba_request_t& creq) [{SeDImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SeDImpl::checkContract(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long SeDImpl::checkContract(corba_estimation_t& estimation, const corba_pb_desc_t& pb) [{SeDImpl.cc}]\", \" \", TAU_USER);"
## entry routine="#SeDImpl::updateTimeSinceLastSolve(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SeDImpl::updateTimeSinceLastSolve() [{SeDImpl.cc}]\", \" \", TAU_USER);"
entry routine="#SeDImpl::solve(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"CORBA::Long SeDImpl::solve(const char* path, corba_profile_t& pb) [{SeDImpl.cc}]\", \" \", TAU_USER);"
entry routine="#SeDImpl::solveAsync(#" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\"void SeDImpl::solveAsync(const char* path, const corba_profile_t& pb, const char* volatileclientREF) [{SeDImpl.cc}]\", \" \", TAU_USER);"




## dynamic timer routine="#"
END_INSTRUMENT_SECTION

### entry routine="##" code="  TAU_REGISTER_THREAD();   TAU_PROFILE(\" [{AgentImpl.cc}]\", \" \", TAU_USER);"
